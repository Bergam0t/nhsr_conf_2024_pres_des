---
title: "Unleashing the Power of Pathway Simulation"
author:
    name: Sammi Rosser
    affiliation: Health Service Modelling Associates Programme
format:
  revealjs:
    output-file: index.html
    embed-resources: true
    view-distance: 100
    height: 800
    width: 1250
    transition: slide
    plotly-connected: true
    background-transition: fade
    theme: [default, custom.scss]
    title-slide-attributes:
        data-background-image: banner.png
    include-in-header:
      - text: |
          <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css"><link href='https://fonts.googleapis.com/css?family=Lexend' rel='stylesheet'>

---

## About Me

```{python}
#| output: false
import plotly
import plotly.io as pio
pio.renderers.default = "plotly_mimetype+notebook_connected"
```

:::: {.columns}

::: {.column width="40%"}
![](resources/profile.jpg){fig-alt="A picture of a woman riding a yellow mountain bike in the woods. The woman is wearing a white full-face helmet, a red and black cycling jersey with the letters 'TLD' on, and red and yellow leopard-print shorts, along with shin and elbow protection. There are large trees in the background, tape indicating the cycling course, and roots and rocks on the ground. The woman looks like she is concentrating."}
:::

::: {.column width="60%"}
- Former NHS Analyst/Data Scientist
- MSc Health Data Science @ Exeter
- Now a HSMA trainer @ Exeter ([PenCHORD](https://arc-swp.nihr.ac.uk/research-and-implementation/research-teams/penchord/)/[PenARC](https://arc-swp.nihr.ac.uk/))
- Mainly a Pythonista these days<br/>(but I ❤️ R too)
- Obsessed with Quarto, Streamlit, Simulation, Maps & Dataviz
:::

[{{< fa brands linkedin >}} Add Me On LinkedIn](https://www.linkedin.com/in/sammijaderosser/)

[{{< fa brands github >}} Follow Me On GitHub](https://github.com/Bergam0t)

::::

## {#about-hsma data-menu-title="About HSMA"}

:::: {.columns}

::: {.column width="35%"}
![](resources/hsma_logo.png){fig-alt="A red logo of a computer monitor and horizontal computer tower underneath it, encased in a circle. Underneath the logo is the acronym 'HSMA' in bold white lettering. Beneath this is the phrase 'Find the Future in You'"}

![](resources/nihr_logo.png){fig-alt="A white and orange logo saying 'NIHR - Applied Research Collaboration South West Peninsula'"}

:::

::: {.column width="5%"}
:::

::: {.column width="60%" }

The Health Service Modelling Associates is a 15 month data science and operational research training and mentoring programme.
</br></br>
Supported by the NIHR PenARC and the NHS Digital Academy, the full programme is provided **free of charge** to people working in health, social care and policing and is accredited by AphA.
</br></br>

[{{< fa globe >}} Visit Our Website for Free Training](https://hsma-programme.github.io/hsma_site/)

[{{< fa brands youtube >}} Subscribe to our YouTube Channel](https://www.youtube.com/@hsma)

[{{< fa brands github >}} Follow us on GitHub](https://github.com/hsma-programme)
:::


::::


# Part 1: Pathways

## Pathway Simulation: Why?

:::: {.columns}

:::{.column width="40%"}

![](resources/long_hospital_queue.jpeg){height=400px fig-alt="A stylised image showing very long queues outside of a hospital building"}

:::

:::{.column width="60%"}

Your emergency department is struggling.

You could try a range of different things...

::: {.incremental}
- increase the number of staff available to register, triage or treat
- increase the number of rooms or beds
- increase the rate at which tests can be processed

:::

:::

::::

:::{.incremental}
- add a new step in the process with a different kind of practitioner
- completely redesign the pathway
:::

:::{.fragment .center}
**Which of these is the right answer?**
:::

## Queue, Queue, Barney McGrew

Healthcare tends to be **full** of queueing problems like this one.

::: {.incremental}
- People attending a walk-in clinic or emergency department
- People calling a telephone-based service like 111 or a mental health crisis line
- People on a cancer diagnosis and treatment pathway
- People waiting to be assessed for ADHD and Autism, or on the waiting list for a gender clinic
- People waiting for a series of treatment with a mental health practitioner
    - might have one, several or many appointments
:::

## Pathway Parts

::::{.columns}

:::{.column width=50%}

Healthcare systems are full of **resources**

::: {.incremental}
- People 👩🏻‍⚕️ 👩🏿‍⚕️ 👨🏽‍⚕️ 👨🏽‍⚕️ 👩🏾‍⚕️
- Equipment 🔬🩺
- Rooms & cubicles 🏥
- Beds 🛌🏻 🛌🏽 🛌🏿 🛌🏻 🛌🏼 🛌🏽 🛌🏿
- Treatments 💉 🩹 💊
- Vehicles 🚑 🚁 🚗
:::

:::

:::{.column width=50%}

::: {.fragment}

These **resources** experience demand from **entities**.

These entities might be

:::

::: {.incremental}
- People (in person) 🤒 🤢 🤧
- People (on the phone) ☎️
- Test Requests 🩻 🧪
:::

:::

::::

## Pathways and Queues


::::{.columns}

:::{.column width=23%}
As these entities move through a pathway - a series of steps where these resources are used - queues can build up where there isn't enough resource.
:::

:::{.column width=7%}
:::

:::{.column width=70%}
![](assets/2024-11-18-10-12-15.png){fig-alt="A pathway showing several steps, starting with 'sign in with receptionist'. One person is signing in; one receptionist is in use and the other is available. A queue of 7 people is then waiting to be triaged. One person is being triaged bby the single available triage nurse. The pathway then splits; one person is seeing a nurse for treatment while two further nurses are available. There is no queue for this step. However, 8 people are waiting to be treated by the single available doctor, who is currently treating someone. People can then either be discharged, receive additional treatment from a nurse or doctor, or may require additional tests. One person is waiting for tests; one person is dealing with the tests while the other is idle. After these tests, people may be discharged, or may need to see a doctor or nurse again."}
:::

::::

## Queue What?

```{=html}
<br/>
```

And these pathways are often very **complicated**!

There are lots of moving parts, and lots of variation.

```{=html}
<br/>
```

:::: {.columns}

::: {.column width="30%" .fragment}
**Variation in when, and how frequently, people arrive**
:::

::: {.column width="5%" }

:::

::: {.column width="30%" .fragment}
**Variation in how long an activity in the pathway takes**
:::

::: {.column width="5%" }

:::

::: {.column width="30%" .fragment}
**Variation in the pathways people take within a single system**
:::


::::


## The Problem with Pathways

Making changes to pathways can be

- costly
- slow
- unsafe!

:::{.fragment}
And even if you do fix the original problem you were trying to solve, there's a risk of knock-on effects elsewhere in the pathway that you didn't foresee.
:::

## The *Future* Problems with Pathways

And even if you avoid that....

A system that is coping now might *not* cope

:::{.incremental}
- all the time
- if demand increases
- if resource temporarily decreases
:::


## It's All a Simulation


On HSMA, we teach a couple of different **computer simulation** techniques.

:::: {.columns}

::: {.column width="27%" .fragment}

### System Dynamics

High-level technique that's often suited to uncovering fundamental issues with pathway or wider healthcare system design

:::

::: {.column width="5%" .fragment}

```{=html}
<div style="border-left:3px solid #fff;height:600px"></div>
```

:::


::: {.column width="30%" .fragment}

### Agent-Based Simulation (ABS)

Individual-level modelling that is particularly interested in the impact of individuals' decisions and interactions

:::


::: {.column width='5%' .fragment}

```{=html}
<div style="border-left:3px solid #fff;height:600px">
</div>
```

:::



::: {.column width="33%" .fragment}

### Discrete Event Simulation (DES)

Modelling focussing on the flow of entities through a pathway and use of resources, allowing detailed investigation of capacity, queues and waits

:::

::::



## It's Our DEStiny

::::{.columns}

:::{.column width=25%}
</br></br>
What we generally want to tackle our pathway problems in healthcare is **Discrete Event Simulation (DES)**<br/>

:::


:::{.column width=5%}
```{=html}
<div style="border-left:3px solid #fff;height:700px"></div>
```
:::

:::{.column width=70%}

::: {.center}

In a DES...
:::

![](assets/2024-11-18-09-41-27.png){fig-alt="The top row of this diagram says 'entities' and shows stylised 'emoji' representations of 5 ill people. The next row of the diagram says 'flow through a pathway' and shows a branching diagram of a healthcare pathway with the steps 'arrive', 'sign in with receptionist', 'triaged', 'see nurse', 'see doctor', 'additional tests', 'discharge'. Some steps are optional or may be repeated more than once - the specifics are not important as it is just an indication of what is meant by 'pathway' in this context. The final row says 'using resources along the way' and shows four doctors and three beds as an indication of what resources are in these context."}
:::

::::

## DES to the Rescue

DES is so powerful because it gives us an in-silico (computer-based) reproduction of our pathway to play around with.
<br/><br/>
We can make any change we want<br/>*(e.g. more resources, higher demand, new pathway design)*<br/>**safely and for free** and see what impact it has on any metric we care to measure:

- how long people wait at each step of the pathway
- people meeting targets (e.g. 4 hour wait)
- how much of the time the resources are utilised for
```{=html}
<br/><br/>
```
And so on!

## Variation

That randomness and variation in our healthcare systems that we mentioned before? DES can cope really well with that!

::::{.columns}

:::{.column width=40%}

Let's imagine that people turn up to our system, on average, every 10 minutes.

However, sometimes no-one turns up for half an hour, and other times 3 people turn up simultaneously.

By using **distributions** we can produce random times that mimic real-world patterns.

:::

:::{.column width=60%}

![](assets/2024-11-19-17-04-14.png)

:::

::::

## Randomness

Taking it even further, we can harness that variation for making the most of our models.

```{=html}
<br/>
```

:::: {.columns  .fragment}

::: {.column width="45%"}

We can hold the random patterns consistent and **change resource levels or pathway design**

:::

::: {.column width="10%" }

```{=html}
<div style="border-left:3px solid #fff;height:250px"></div>
```

:::

::: {.column width="45%" }

We can hold resources or pathway design consistent and **allow randomness**

:::

::::


```{=html}
<br/>
```



:::: {.columns .fragment}

::: {.column width="45%" }

This allows us to be sure the changes we're testing really are responsible for the differences

:::

::: {.column width="10%" }

```{=html}
<div style="border-left:3px solid #fff;height:250px"></div>
```

:::

::: {.column width="45%" }

This allows us to test our system in multiple parallel universes, running it **tens** or even **hundreds** of times!

:::

::::


## Exploring Impacts

::::{.columns}

:::{.column width=30%}

In our models, we can then summarise the performance of a given set of parameters across multiple runs.

:::

:::{.column width=10%}

:::

:::{.column width=60%}
![](assets/2024-11-18-18-52-06.png){width=600px fig-alt="A bar chart is shown that has 'Resource Utilisation (%)' on the vertical axis and 'Examination (Nurses)' and 'Treatment (Doctors)' on the horizontal axis. The 85 to 100% section is shown as red, 65 to 85% is shown as green, 40 to 65% is shown as amber, and 0 to 40% is again red. The examination (nurses) bar is at 100%, placing it in the red section for over-utilisation. The Treatment (Doctors) bar is at approximately 75%, placing it in the green section. A label shows at a quick glance that 1 of 2 utilisation metrics are in the ideal range in this simulation run."}

:::

::::

## Digging Into Results

We can start to explore the variation in performance across runs too.

![](assets/2024-11-18-18-52-30.png){fig-alt="A box plot showing the utilisation of treatment (doctor) and examination (nurse) resources across multiple simulation runs. The horizontal axis shows the average % utilisation, from 0% to 100%. The 85 to 100% section is shown as red, 65 to 85% is shown as green, 40 to 65% is shown as amber, and 0 to 40% is again red. The box plot shows the average and spread of model runs, with all 15 model runs showing a doctor utilisation of between 65% and 80%, with the average around 75%, so all runs show average doctor utilisation in an acceptable range. However, you cannot see the variation for nurses, as all runs appear to be around 100%, strongly suggesting there is never enough nurse resource even on 'quiet' days in the model."}

## Comparing Performance

And we can provide visualiations to compare the impact of changing parameters - here, for example, adding one extra stabilisation bay.

![](assets/2024-11-18-18-54-56.png){fig-alt="Two bar charts side-by-side indicating 'Utilisation' and 'Waits'. The horizontal axis for utilisation shows 0 to 100%. The 85 to 100% section is shown as red, 65 to 85% is shown as green, 40 to 65% is shown as amber, and 0 to 40% is again red. Treatment bays (trauma) and stabilisation bays are both in the red section, while treatment bays (non-trauma) are in the green section. Staggered bars show the average utilisation across two different scenarios. The second scenario shows slightly lower utilisation of both, but not enough to be in the green. The second graph shows 'waits' in minutes, with waits of below 120 minutes being green. Scenario 1 shows waits for stabilisation averaging over 300 minutes. Scenario 2 shows the waits decreasing to around 150 minutes on average. Waits for trauma treatment drop from 130 in scenario 1 to 50 in scenario 2."}


## A Note About Modelling

Your DES won't be a perfect one-to-one reproduction of the pathway you are modelling.

We have to make certain assumptions and simplifications, and we can't capture every complexity.


::::{.columns}


:::{.column width=45%}


However...

<br/><br/>


> All models are wrong, but some are useful

• George E. P. Box

:::


:::{.column width=10%}

:::


:::{.column width=45%}

![](assets/box_pixel.jpeg){height=450px fig-alt="A stylised colour illustration of an older man - intended to resemble the statistician George E P Box - sitting at a desk. The man has large round glasses, a large grey pointed moustache and grey hair. He is wearing a brown suit and waistcoat with a blue patterned tie. On the wall behind him are books, and on the table is a calculator, books and a clipboard. There are also graphs and charts on the wall and on a computer monitor on the desk."}

:::


::::



# Example DES Projects


## DES is popular!

- On the HSMA programme, we've had over 35 projects using DES in some capacity
<br/><br/>
- A third of the registered projects this year use DES
(as opposed to machine learning, ABS, system dynamics, natural language processing, geographical modelling)
<br/><br/>
- It's also frequently used in the [PenCHORD](https://arc-swp.nihr.ac.uk/research-and-implementation/research-teams/penchord/) team

## Example 1: Bladder Cancer Pathway

In this [PenCHORD](https://arc-swp.nihr.ac.uk/research-and-implementation/research-teams/penchord/) project, a DES model of the bladder cancer pathway at Royal Cornwall Hospitals Trust (RCHT) exposed two key system bottlenecks.

- A delay between patients being referred and receiving their surgery
- A delay waiting for the nurse specialist to contact the patient to discuss their diagnosis and treatment options

The model was used to support an on-the-spot rewrite of the pathway, resulting in multi-week reductions to waiting times.
<br/><br/>
[{{< fa globe >}} Find Out More](https://arc-swp.nihr.ac.uk/research/projects/penchord-streamlining-the-bladder-cancer-pathway-at-rcht/)


## Example 2: Vaccination Clinic

This [HSMA](https://hsma-programme.github.io/hsma_site/) project looked at the design of a COVID-19 vaccination clinic in North Devon, exploring

- queue lengths
- car park capacity
- times for each step of the vaccination process

The model identified potential issues with the original proposed plans, and was used to refine the plans to enable a safe but efficient delivery of the vaccination programme.
<br/><br/>
[{{< fa globe >}} Find Out More](https://hsma-programme.github.io/hsma_site/previous_projects/hsma_3/h3_generic_vaccination/)

## Example 3: Emergency Department Model

This [HSMA](https://hsma-programme.github.io/hsma_site/) project looked at ways to improve Urgent Treatment Care (UTC) performance. The team wanted to know

- What further staff and resources would be required for any variations in patient attendance
- How changes in the patient pathway would reduce bottlenecks</br> (e.g what would be the impact of front-loading diagnostics?)

The model identified a need for additional rooms and the ED was redesigned as a result.
<br/><br/>
[{{< fa globe >}} Find Out More](https://hsma-programme.github.io/hsma_site/previous_projects/hsma_3/h3_generic_vaccination/)


## Example 4: Mental Health Assessment Pathway Model

This [PenCHORD](https://arc-swp.nihr.ac.uk/research-and-implementation/research-teams/penchord/) project created a simulation model of a mental health assessment pathway.

The trust in question was piloting an approach that would allow patients to book their appointments themselves.

The model was used to help

- predict the number of appointment slots required at each site
- show that allowing queue-sharing between smaller groups of sites would significantly reduce the wait times

[{{< fa globe >}} Find Out More](https://arc-swp.nihr.ac.uk/publications/scheduling-community-mental-health-assessment-in-devon/)


## Example 5: Children's Neurodiversity Assessment Pathway

This [HSMA](https://hsma-programme.github.io/hsma_site/) project created a model of a paediatric neurodevelopmental (ADHD + autism) pathway. Waits had increased to a 2 years on average.

The team wanted to understand

- where current bottlenecks in the process were
- what level of staffing would be needed to clear the existing backlog and maintain a steady state

The model showed that recruiting an extra lead clinician would not address the bottleneck - but an additional second assessor would.

[{{< fa globe >}} Find Out More](https://hsma-programme.github.io/hsma_site/previous_projects/hsma_4/h4_des_adhd_autism_pathway/)


## Other Projects

You can find details about all of our previous and current Discrete Event Simulation projects [{{< fa globe >}} on the HSMA website](https://hsma-programme.github.io/hsma_site/previous_projects/projects_by_methods.html#discrete-event-simulation)

![](assets/cfN8dkSYNB.gif){fig-alt="An animation of someone navigating through a page of projects on the HSMA website. They scroll down to a project on simulation and click on 'details' to receive more information and find a video on the project."}

# Doing your Own DES Projects

## The DES Playground

This site was designed to help teach the **key concepts** of discrete event simulation to non-technical beginners.

::::{.columns}

:::{.column width="70%"}

![](assets/chrome_2RNEIsSXoP.gif){fig-alt="An animation showing a web interface for a discrete event simulation model. An animated representation of people moving through a two-step examination and treatment pathway is displayed, with queues at those different stages shown. The user thn moves to a series of simple bar charts showing metrics, and a series of more advanced box plots to show variation across multiple runs of the simulation."}

:::

:::{.column width="30%"}

[{{< fa globe>}} &nbsp; Click here to visit!](https://hsma-programme.github.io/Teaching_DES_Concepts_Streamlit)

<br/>

It uses browser-based Python, so calculations can be slow on mobile devices and won't work on Firefox!


:::

::::



## Drag & Drop

There are various paid, closed-source drag-and-drop software tools for doing DES (but we won't talk about them here).

If you don't code, there is the free and open source (FOSS) tool [JaamSim](https://jaamsim.com/).

![](assets/2024-11-18-10-15-22.png){fig-alt="A screenshot showing the homepage of the website for the JaamSim software. It contains a link to download the software for free, as well as a video showing the use of the software and some key information about the features of the software."}


## DES in R

::::{.columns}

:::{.column width=60%}

![](resources/simmer-hex-01.svg){height=500px fig-alt="The logo for the simmer R package. It is a yellow hexagon with a darker yellow border, with the word 'simmer' at the bottom and a simple black mug containing a spoon and three white dots."}

:::


:::{.column width=40%}

<br/><br/>

R has the [simmer](https://r-simmer.org/) package.

:::

::::



## DES in Python

In Python, there are a range of packages for DES.

::::{.columns}

:::{.column width=40%}

![](assets/2024-11-18-10-19-04.png){fig-alt="The logo for the Salabim simulation package. It is the text 'salabim' in a curly, stylised red font. In smaller text below this, it says 'discete event simulation'."}

:::

:::{.column width=60%}

[Salabim](https://github.com/salabim/salabim) is quite popular.

:::

::::

::::{.columns}

:::{.column width=40%}

![](assets/2024-11-18-10-16-14.png){fig-alt="The logo for the ciw package. It says 'Ciw' in simple white font on a yellow background, and below it has a white circle. To the left of the circle is a rectangle missing the leftmost edge, and several smaller complete rectangles within it at the rightmost end."}

:::

:::{.column width=60%}

I've also heard good things about [ciw](https://github.com/CiwPython/Ciw)

:::

::::

::::{.columns}

:::{.column width=40%}

![](assets/2024-11-18-10-17-01.png){fig-alt="The logo for the simpy package. It is the text 'SimPy' in green and grey, with the top of the S stylised as the head of a snake and the bottom as a cog."}

:::

:::{.column width=60%}

But HSMA has used and taught [simpy](https://simpy.readthedocs.io/en/latest/) for several years. It's mature, stable, reliable and flexible.

:::

::::


## HSMA Training on DES {.smaller}

The DES lectures and activities from this year's HSMA can be found on our website.

[{{< fa globe >}} Module Link](https://hsma-programme.github.io/hsma_site/hsma_content/modules/current_module_details/2_des.html)


:::: {.columns}

::: {.column width="30%"}

### Intro to DES

• What DES is and where it may be useful

• The key terminology associated with DES e.g. resources, entities, sinks

• How to simplify a real-world pathway modelling problem into a conceptual model

:::


::: {.column width="5%"}

:::


::: {.column width="30%" .fragment}

### SimPy for DES

• The features of the SimPy package

• How to write simple simulations with SimPy

• Multi-step pathways

• Branching pathways and optional steps

:::

::: {.column width="5%"}

:::

::: {.column width="30%" .fragment}

### Advanced Simpy

• Warm-up Periods

• Priority-based Queuing

• Resource Unavailability

• Lognormal Distributions

• Reneging

• Balking

• Jockeying

:::

::::

## The Little Book of DES

:::: {.columns}

::: {.column width="50%"}

![](resources/des_cover_image.jpeg){fig-alt="An illustration of a woman with brown hair sitting at a desk and working on a computer with a globe on the screen. In the background is a futuristic scene showing a modern cityscape and the curvature of the earth, as though she is on a space station."}

[{{< fa globe>}} &nbsp; Click here to view the eBook](https://hsma-programme.github.io/hsma6_des_book/)

:::

::: {.column width="50%"}

We have also put together a **free eBook** that serves as a handy reference to doing DES with SimPy.

It's packed with code snippets you can use and modify and goes beyond the lecture content, including

• appointment-based models

• reproducibility

• parallelisation

• and more!

:::

::::


## HSMA Training on Web App Interfaces for DES {.smaller}

::::{.columns}

:::{.column width=23%}

While creating these models and running a range of parameters yourself can be really powerful, getting the models into the hands of stakeholders can really enhance their adoption.
<br/><br/>
Frameworks like [Streamlit](https://streamlit.io/) can help you to quickly create interactive web app front-ends for your app.

:::

:::{.column width=3%}

:::

:::{.column width=74%}

![](assets/chrome_CdAZUpS295.gif){fig-alt="An animation of a simulation model web interface, showing a user changing simulation parameters using sliders"}

:::

::::


## The HSMA Book of Streamlit


:::: {.columns}

::: {.column width="50%"}

![](resources/streamlit_cover_image.jpeg){fig-alt="A book cover, showing a robot surfing on a wave made of numbers"}

:::

::: {.column width="50%"}

This free eBook walks you through a range of Streamlit concepts.
<br/><br/>
It then goes on to providing a walk-through of how to create a simple front-end for any DES and deploying that on a free online hosting platform.

:::

::::

[{{< fa globe>}} &nbsp; Click here to view the eBook](https://bergam0t.github.io/streamlit_book/)



## Pathway Visualisation

As part of creating the DES playground, I put together the visualisation you saw in the previous slide.
<br/><br/>
It really resonated with people - so we wanted to make more use of it!
<br/><br/>
We know that one of the big limitations of simpy (and other FOSS code-based options) is not being able to produce **quick and simple** visualisations to show to stakeholders.


## The vidigi package

The [**vidigi**](https://pypi.org/project/vidigi/) package is designed to be a flexible library for creating these animated visualisations for **any** simulation.

Under the hood, it makes use of [Plotly's](https://plotly.com/python/) animated scatterplots.

However, it adds a range of additional helper functions to

- process event logs into the format required
- lay out the animation
- add icons for resources and entities

It's hosted on PyPI - so you can `pip install` it!


```{python}
#| echo: true
#| eval: false
#| code-line-numbers: false
pip install vidigi
```

## Moving from this...

```{python}
#| output: false
#| eval: false
from examples.example_2_branching_multistep.ex_2_model_classes import Trial, g, event_position_df
from vidigi.animation import animate_activity_log
import pandas as pd

g.arrival_df = "examples/example_2_branching_multistep/ed_arrivals.csv"

my_trial = Trial()
result = my_trial.run_trial()
```

```{python}
#| eval: false
fig = animate_activity_log(
        event_log=my_trial.all_event_logs[my_trial.all_event_logs['run']==1],
        event_position_df=event_position_df,
        scenario=g(),
        setup_mode=True,
        debug_mode=False,
        every_x_time_units=5,
        include_play_button=True,
        gap_between_entities=10,
        gap_between_rows=15,
        plotly_height=650,
        plotly_width=950,
        override_x_max=700,
        override_y_max=675,
        icon_and_text_size=12,
        wrap_queues_at=10,
        step_snapshot_max=50,
        limit_duration=g.sim_duration,
        time_display_units="dhm",
        display_stage_labels=False,
        custom_entity_icon_list=["🔴"],
        custom_resource_icon=""
    )

fig.show()

# Due to inability to autoplay above, embedding as gif

```

![](assets/firefox_mrlo2ZZy2D.gif){fig-alt="An animation showing red dots moving across a flat plane. The passing of time is shown."}

## ... to this

```{python}
#| eval: false
fig = animate_activity_log(
        event_log=my_trial.all_event_logs[my_trial.all_event_logs['run']==1],
        event_position_df=event_position_df,
        scenario=g(),
        setup_mode=False,
        debug_mode=False,
        every_x_time_units=5,
        include_play_button=True,
        gap_between_entities=10,
        gap_between_rows=15,
        plotly_height=650,
        plotly_width=950,
        override_x_max=700,
        override_y_max=675,
        icon_and_text_size=12,
        wrap_queues_at=10,
        step_snapshot_max=50,
        limit_duration=g.sim_duration,
        time_display_units="dhm",
        display_stage_labels=False,
        add_background_image="https://raw.githubusercontent.com/Bergam0t/nhsr_conf_2024_pres_des/refs/heads/main/examples/example_2_branching_multistep/Full%20Model%20Background%20Image%20-%20Horizontal%20Layout.drawio.png",
    )

fig.show()

# Due to inability to autoplay above, embedding as gif
```

![](assets/firefox_WQjMAS0YvL.gif){fig-alt="An animation showing the movement of people through an emergency department or walk-in clinic. Queues build up in named sections of the animation, and the number of available resources at each step are indicated, with thhe individual people icons moving to a resource to show they are making use of it. Resources relate to steps including triage rooms, stabilisation bays, treatment cubicles, registration cubicles, examination bays and treatment cubicles. Time passes in the animation, showing how queues may ebb and flow at different times of day and where unacceptable queues may build up."}

## 'Resourceless' queues in vidigi

It is flexible for simulations that use both traditional simpy resources, or steps can just be represented as 'queues'.

![](assets/firefox_w2SqxbI1UI.gif){fig-alt="A series of people moving between stages of a pathway. There are 8 clinicians represented, with steps including 'booked for appointment', 'attending appointment', and 'on books - awaiting next appointment', 'waiting to be scheduled' and 'referred out - unsuitable for service'"}

## Simulation Library

:::{.callout-warning appearance="minimal"}
This is an early-stage piece of work!
:::

To go along with vidigi, I'm working on collating and visualising models from across healthcare systems.

At present, there is

- A simple emergency department
- An orthopaedic surgery unit
- A simple community-based service with a single appointment
- A complex community-based service with varying numbers of appointments and a per-clinician caseload

[{{< fa brands github>}} &nbsp; Click here for the code repository](https://github.com/hsma-programme/simpy_visualisation/tree/main/examples)

[{{< fa globe>}} &nbsp; Click here to try them out](https://simpy-visualisation.streamlit.app/)

## Model Reproducibility

![](resources/stars.png){fig-alt="A five-pointed logo comprised of arrows relating to the STARS initiative. The image includes details of what STARS stands for in this context: Sharing Tools and Artefacts for Reproducible Simulations in healthcare"}

Reproducibility and reusability of models is crucial.

I want to take a moment to highlight [STARS](https://github.com/pythonhealthdatascience).

This is a [UKRI-funded project](https://gtr.ukri.org/projects?ref=MR%2FZ503915%2F1) that is trying to ensure good reproducibility of healthcare simulation models.

They are also creating best-practice examples in Python and R and reproducing models from published scientific papers.

## The STARS Framework

```{=html}
<br/>
```

:::: {.columns}

:::  {.column width="45%"}
#### Essential Components

- Open license
- Dependency management
- Model created using free and open-source software (FOSS)
- Minimum documentation
- Research artefact meta data (ORCID ID + citation info)
- Remote code repository
- Open science archive
:::

:::  {.column width="10%"}

:::

:::  {.column width="45%"}
#### Optional Components

- Enhanced documentation
- Documentation hosting
- Online coding environment
- Model interface
- Web app hosting
:::

::::


# End of Simulation

## Summary

- DES is an amazing option for tackling your pathway problems
<br/><br/>
- With ever-growing resources and community experience out there, it's a great time to get started
<br/><br/>
- FOSS libraries allow us to adapt and reuse models - but follow guidance to make it as easy as possible for people to stand on your shoulders!
